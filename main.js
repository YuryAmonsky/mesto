(()=>{"use strict";var e={selectorTemplate:".location-template",selectorCard:".location",selectorImage:".location__image",selectorName:".location__name",selectorButtonDelete:".location__delete-icon",selectorButtonLike:".location__like",selectorLikesNumber:".location__likes-number",classLike:"location__like_active"},t=document.querySelector(".profile__avatar-container"),n=(document.querySelector(".profile__avatar"),document.querySelector(".profile__edit-button")),o=document.querySelector(".profile__add-button"),r=".popup__close-icon",i="popup_opened",s={selectorPopup:".popup_type_edit-profile",selectorButtonClose:r,classOpenedPopup:i},a={selectorPopup:".popup_type_edit-avatar",selectorButtonClose:r,classOpenedPopup:i},l={selectorPopup:".popup_type_new-location",selectorButtonClose:r,classOpenedPopup:i},c={selectorPopup:".popup_type_delete-location",selectorButtonClose:r,classOpenedPopup:i},u={selectorForm:".dialog-form",selectorInput:".dialog-form__input",selectorSubmitButton:".dialog-form__submit-button",classButtonDisabled:"dialog-form__submit-button_disabled",classInputInvalid:"dialog-form__input_invalid",classErrorActive:"dialog-form__input-error_active"},f={selectorPopup:".popup_type_view-image",selectorButtonClose:r,classOpenedPopup:i};function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var _=function(){function e(t){var n=t.selectorTextAboutMe,o=t.selectorTextName,r=t.selectorAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._elementProfileName=document.querySelector(o),this._elementProfileAboutMe=document.querySelector(n),this._elementProfileAvatar=document.querySelector(r)}var t,n;return t=e,n=[{key:"getData",value:function(){return Object.assign({},function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({inputEditProfileName:this._data.name,inputEditProfileAboutMe:this._data.about},this._data))}},{key:"setData",value:function(e){this._data=Object.assign({},e),this._elementProfileName.textContent=this._data.name,this._elementProfileAboutMe.textContent=this._data.about}},{key:"setUserAvatar",value:function(e){this._elementProfileAvatar.src=e}}],n&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var y=function(){function e(t,n,o,r,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardData=Object.assign({},t),this._cardData.owner=Object.assign({},t.owner),this._objElementClassHolder=n,this._handleImageClick=o,this._handleTrashClick=r,this._handleButtonLikeClick=i,this._template=document.querySelector(n.selectorTemplate),this._elementCard=null,this._elementImage=null,this._elementName=null,this._elementButtonDelete=null,this._elementButtonLike=null,this._likesNumber=null}var t,n;return t=e,(n=[{key:"prepareCard",value:function(e){var t=this.isThisUserCard(e);return this._prepareLayuotElements(t),this._setEventListeners(t),this._setLikeStatus(e),this._elementCard}},{key:"_prepareElementsValues",value:function(e){this._elementImage.src=this._cardData.link,this._elementImage.alt="Фотография места ".concat(this._cardData.name),this._elementName.textContent=this._cardData.name,this._likesNumber.textContent=this._cardData.likes.length,e&&(this._elementButtonDelete.style.visibility="visible")}},{key:"_prepareLayuotElements",value:function(e){this._elementCard=this._template.content.querySelector(this._objElementClassHolder.selectorCard).cloneNode(!0),this._elementImage=this._elementCard.querySelector(this._objElementClassHolder.selectorImage),this._elementName=this._elementCard.querySelector(this._objElementClassHolder.selectorName),this._elementButtonDelete=this._elementCard.querySelector(this._objElementClassHolder.selectorButtonDelete),this._elementButtonLike=this._elementCard.querySelector(this._objElementClassHolder.selectorButtonLike),this._likesNumber=this._elementCard.querySelector(this._objElementClassHolder.selectorLikesNumber),this._prepareElementsValues(e)}},{key:"getId",value:function(){return this._cardData._id}},{key:"isLiked",value:function(){return this._isLiked}},{key:"isThisUserCard",value:function(e){return e===this._cardData.owner._id}},{key:"remove",value:function(){this._elementCard.remove(),this._elementCard=null}},{key:"_setLikeStatus",value:function(e){this._isLiked=this._cardData.likes.some((function(t){return e===t._id})),this._isLiked?this._elementButtonLike.classList.add(this._objElementClassHolder.classLike):this._elementButtonLike.classList.remove(this._objElementClassHolder.classLike)}},{key:"_setEventListeners",value:function(e){var t=this;this._elementImage.addEventListener("click",(function(){t._handleImageClick(t._cardData.name,t._cardData.link)})),e&&this._elementButtonDelete.addEventListener("click",(function(){t._handleTrashClick(t)})),this._elementButtonLike.addEventListener("click",(function(){t._handleButtonLikeClick(t)}))}},{key:"updateCardData",value:function(e,t){var n=this.isThisUserCard(t);this._cardData=Object.assign({},e),this._cardData.owner=Object.assign({},e.owner),this._prepareElementsValues(n),this._setLikeStatus(t)}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var v=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._objClassHolder=n,this._buttonSubmit=this._form.querySelector(this._objClassHolder.selectorSubmitButton),this._inputList=Array.from(t.querySelectorAll(this._objClassHolder.selectorInput))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){e.classList.add(this._objClassHolder.classInputInvalid);var n=this._form.querySelector(".".concat(e.id,"-error"));n.textContent=t,n.classList.add(this._objClassHolder.classErrorActive)}},{key:"_hideInputError",value:function(e){e.classList.remove(this._objClassHolder.classInputInvalid);var t=this._form.querySelector(".".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._objClassHolder.classErrorActive)}},{key:"_disableButton",value:function(){this._buttonSubmit.setAttribute("disabled","true"),this._buttonSubmit.classList.add(this._objClassHolder.classButtonDisabled)}},{key:"_enableButton",value:function(){this._buttonSubmit.removeAttribute("disabled"),this._buttonSubmit.classList.remove(this._objClassHolder.classButtonDisabled)}},{key:"_isFormValid",value:function(){return!this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleSubmitButtonState",value:function(){this._isFormValid(this._inputList)?this._enableButton():this._disableButton()}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_setEventListenersToAllInputs",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitButtonState()}))}))}},{key:"initErrorHints",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleSubmitButtonState()}},{key:"enableValidation",value:function(){this._setEventListenersToAllInputs()}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var g=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._element=document.querySelector(t),this._renderer=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"prependItem",value:function(e){this._element.prepend(e)}},{key:"appendItem",value:function(e){this._element.append(e)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var O=function(){function e(t){var n=t.selectorPopup,o=t.selectorButtonClose,r=t.classOpenedPopup;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._element=document.querySelector(n),this._elementButtonClose=this._element.querySelector(o),this._classOpened=r,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._element.classList.add(this._classOpened)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._element.classList.remove(this._classOpened)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOnBGClickClose",value:function(e){e.target.classList.contains("popup__container")&&this.close()}},{key:"setEventListeners",value:function(){this._elementButtonClose.addEventListener("click",this.close.bind(this)),this._element.addEventListener("click",this._handleOnBGClickClose.bind(this))}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function w(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=L(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},C.apply(this,arguments)}function L(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function P(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(s,e);var t,n,o,r,i=(o=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(o);if(r){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function s(e,t,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(o=i.call(this,e))._elementForm=o._element.querySelector(t.selectorForm),o._elementSubmitButton=o._elementForm.querySelector(t.selectorSubmitButton),o._inputsList=Array.from(o._elementForm.querySelectorAll(t.selectorInput)),o._handleSubmit=n,o._caller=null,o}return t=s,n=[{key:"open",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;e&&(this._caller=e),C(I(s.prototype),"open",this).call(this)}},{key:"close",value:function(){this._elementForm.reset(),C(I(s.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var e=this;return this._inputsValues={},this._inputsList.forEach((function(t){return e._inputsValues[t.name]=t.value})),this._inputsValues}},{key:"setInputValues",value:function(e){this._inputsList.forEach((function(t){return t.value=e[t.name]}))}},{key:"setSubmitStatus",value:function(e){this._elementSubmitButton.textContent=e}},{key:"getForm",value:function(){return this._elementForm}},{key:"setEventListeners",value:function(){var e=this;C(I(s.prototype),"setEventListeners",this).call(this),this._elementForm.addEventListener("submit",(function(t){t.preventDefault(),e._inputsList.length>0?e._handleSubmit(e._getInputValues()):e._handleSubmit(e._caller)}))}}],n&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),s}(O);function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function T(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=R(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},A.apply(this,arguments)}function R(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function N(e,t){if(t&&("object"===D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(s,e);var t,n,o,r,i=(o=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=H(o);if(r){var n=H(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function s(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(n=i.call(this,e))._imageOrigin=n._element.querySelector(t.selectorImage),n._textCaption=n._element.querySelector(t.selectorCaption),n}return t=s,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._imageOrigin.src=n,this._imageOrigin.alt="Фотография места ".concat(t),this._textCaption.textContent=t,A(H(s.prototype),"open",this).call(this)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),s}(O);function U(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function V(e,t){return new y(e,t,(function(e,t){$.open({name:e,link:t})}),(function(e){Z.open(e)}),(function(e){e.isLiked()?F.deleteLike(e.getId()).then((function(t){e.updateCardData(t,G)})).catch((function(e){console.log(e.status),alert("Ошибка удаления лайка: ".concat(e.status))})):F.setLike(e.getId()).then((function(t){e.updateCardData(t,G)})).catch((function(e){console.log(e.status),alert("Ошибка добавления лайка: ".concat(e.status))}))})).prepareCard(G)}var F=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkServerResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkServerResponse)}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkServerResponse)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkServerResponse)}},{key:"loadLocations",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._checkServerResponse)}},{key:"addNewLocation",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkServerResponse)}},{key:"deleteLocation",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkServerResponse)}},{key:"setLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkServerResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkServerResponse)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-46",headers:{authorization:"5e6cc9f1-f651-45bc-a626-0a767814a31d","Content-Type":"application/json"}}),M=new _({selectorTextName:".profile__name",selectorTextAboutMe:".profile__about-me",selectorAvatar:".profile__avatar"}),G="",J=new g(".location-list",(function(t){J.appendItem(V(t,e))}));Promise.all([F.getUserInfo(),F.loadLocations()]).then((function(e){M.setUserAvatar(e[0].avatar),M.setData(e[0]),G=M.getData()._id,J.renderItems(e[1])})).catch((function(e){console.log(e.status),alert("Ошибка загрузки данных:\n ".concat(e.status,"\n ").concat(e.text))}));var z=new B(s,u,(function(e){z.setSubmitStatus("Сохранение..."),F.setUserInfo({name:e.inputEditProfileName,about:e.inputEditProfileAboutMe}).then((function(e){M.setData(e),z.close()})).catch((function(e){console.log(e.status),alert("Ошибка сохранения данных профиля:\n ".concat(e.status,"\n ").concat(e.text))})).finally((function(){z.setSubmitStatus("Сохранить")}))})),K=new v(z.getForm(),u),Q=new B(a,u,(function(e){Q.setSubmitStatus("Загрузка..."),F.setAvatar(e.inputEditAvatar).then((function(e){M.setUserAvatar(e.avatar),Q.close()})).catch((function(e){console.log(e.status),alert("Ошибка сохранения аватара:\n ".concat(e.status,"\n ").concat(e.text))})).finally((function(){Q.setSubmitStatus("Сохранить")}))})),W=new v(Q.getForm(),u),X=new B(l,u,(function(t){X.setSubmitStatus("Добавление..."),F.addNewLocation({name:t.inputNewLocationName,link:t.inputNewLocationLink}).then((function(t){J.prependItem(V(t,e)),X.close()})).catch((function(e){console.log(e.status),alert("Ошибка добавления поста:\n ".concat(e.status,"\n ").concat(e.text))})).finally((function(){X.setSubmitStatus("Создать")}))})),Y=new v(X.getForm(),u),Z=new B(c,u,(function(e){Z.setSubmitStatus("Удаление..."),F.deleteLocation(e.getId()).then((function(t){console.log(t),e.remove(),Z.close()})).catch((function(e){console.log(e.status),alert("Ошибка удаления поста:\n ".concat(e.status,"\n ").concat(e.text))})).finally((function(){Z.setSubmitStatus("Да")}))})),$=new x(f,{selectorImage:".original-image",selectorCaption:".image-caption"});t.addEventListener("click",(function(){Q.open(),W.initErrorHints()})),n.addEventListener("click",(function(){var e;e=M.getData(),z.setInputValues(e),K.initErrorHints(),z.open()})),o.addEventListener("click",(function(){X.open(),Y.initErrorHints()})),z.setEventListeners(),Q.setEventListeners(),X.setEventListeners(),$.setEventListeners(),Z.setEventListeners(),K.enableValidation(),Y.enableValidation(),W.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,